@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid py-4 dashboard-page">

    <!-- Tiêu đề -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold mb-0">📊 Tổng quan hệ thống</h2>
        <span class="text-muted small">Cập nhật: @DateTime.Now.ToString("dd/MM/yyyy HH:mm")</span>
    </div>

    <!-- Thống kê nhanh -->
    <div class="row g-4 mb-4">
        <div class="col-md-3 col-sm-6">
            <a asp-controller="Sach" asp-action="Index" class="text-decoration-none">
                <div class="card stat-card text-center border-0 shadow-sm hover-scale">
                    <div class="card-body">
                        <div class="stat-icon bg-primary text-white mx-auto mb-3 rounded-circle d-flex align-items-center justify-content-center">
                            📚
                        </div>
                        <h6 class="fw-semibold text-secondary">Sách</h6>
                        <h3 class="fw-bold text-dark">@ViewBag.TotalBooks</h3>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-3 col-sm-6">
            <a asp-controller="NguoiDung" asp-action="Index" class="text-decoration-none">
                <div class="card stat-card text-center border-0 shadow-sm hover-scale">
                    <div class="card-body">
                        <div class="stat-icon bg-success text-white mx-auto mb-3 rounded-circle d-flex align-items-center justify-content-center">
                            👥
                        </div>
                        <h6 class="fw-semibold text-secondary">Người dùng</h6>
                        <h3 class="fw-bold text-dark">@ViewBag.TotalUsers</h3>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-3 col-sm-6">
            <a asp-controller="DonHang" asp-action="Index" class="text-decoration-none">
                <div class="card stat-card text-center border-0 shadow-sm hover-scale">
                    <div class="card-body">
                        <div class="stat-icon bg-warning text-white mx-auto mb-3 rounded-circle d-flex align-items-center justify-content-center">
                            🛒
                        </div>
                        <h6 class="fw-semibold text-secondary">Đơn hàng</h6>
                        <h3 class="fw-bold text-dark">@ViewBag.TotalOrders</h3>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-3 col-sm-6">
            <div class="card stat-card text-center border-0 shadow-sm hover-scale">
                <div class="card-body">
                    <div class="stat-icon bg-danger text-white mx-auto mb-3 rounded-circle d-flex align-items-center justify-content-center">
                        💵
                    </div>
                    <h6 class="fw-semibold text-secondary">Doanh thu</h6>
                    <h3 class="fw-bold text-success">@String.Format("{0:N0} ₫", ViewBag.TotalRevenue)</h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Biểu đồ doanh thu -->
    <div class="card shadow-sm border-0 p-4 mb-4 rounded-3 chart-card">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="fw-semibold mb-0">📈 Doanh thu 6 tháng gần nhất</h5>
            <span class="text-muted small">(đơn vị: VNĐ)</span>
        </div>
        <canvas id="doanhThuChart" style="max-height:420px;"></canvas>
    </div>

    <!-- Bảng chi tiết -->
    <div class="card shadow-sm border-0 p-4 rounded-3 table-card">
        <h5 class="fw-semibold mb-3">📋 Thống kê chi tiết doanh thu</h5>
        <div class="table-responsive">
            <table class="table table-bordered table-hover text-center align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Tháng/Năm</th>
                        <th>Doanh thu (VNĐ)</th>
                    </tr>
                </thead>
                <tbody id="doanhThuTable"></tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
    <script>
        const doanhThuData = @Html.Raw(ViewBag.DoanhThuTheoThang);
        const ctx = document.getElementById('doanhThuChart').getContext('2d');

        function isDarkMode() {
            return document.body.classList.contains('dark');
        }

        function getGradient(ctx, dark) {
            const gradient = ctx.createLinearGradient(0, 0, 0, 400);
            gradient.addColorStop(0, dark ? 'rgba(255, 159, 64, 0.8)' : 'rgba(54, 162, 235, 0.8)');
            gradient.addColorStop(1, dark ? 'rgba(255, 99, 132, 0.6)' : 'rgba(75, 192, 192, 0.6)');
            return gradient;
        }

        const labels = doanhThuData.map(d => `${d.Month}/${d.Year}`);
        const dataValues = doanhThuData.map(d => d.TongDoanhThu);

        const myChart = new Chart(ctx, {
            data: {
                labels,
                datasets: [
                    {
                        type: 'bar',
                        label: 'Doanh thu (VNĐ)',
                        data: dataValues,
                        backgroundColor: getGradient(ctx, isDarkMode()),
                        borderRadius: 10,
                        order: 2
                    },
                    {
                        type: 'line',
                        label: 'Xu hướng',
                        data: dataValues,
                        borderColor: '#ff6384',
                        borderWidth: 2,
                        pointBackgroundColor: '#ff6384',
                        pointRadius: 5,
                        tension: 0.3,
                        fill: false,
                        order: 1
                    }
                ]
            },
            options: {
                responsive: true,
                animation: {
                    duration: 800,
                    easing: 'easeOutQuart'
                },
                plugins: {
                    legend: {
                        position: 'top',
                        labels: {
                            color: isDarkMode() ? '#fff' : '#000',
                            font: { size: 13 }
                        }
                    },
                    datalabels: {
                        anchor: 'end',
                        align: 'end',
                        color: isDarkMode() ? '#fff' : '#000',
                        font: { weight: 'bold', size: 12 },
                        formatter: (val, ctx) =>
                            ctx.dataset.type === 'bar' ? val.toLocaleString('vi-VN') + ' ₫' : null
                    },
                    tooltip: {
                        callbacks: {
                            label: ctx => `${ctx.dataset.label}: ${ctx.raw.toLocaleString('vi-VN')} ₫`
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            color: isDarkMode() ? '#fff' : '#000',
                            callback: val => val.toLocaleString('vi-VN') + ' ₫'
                        }
                    },
                    x: {
                        ticks: { color: isDarkMode() ? '#fff' : '#000' }
                    }
                }
            },
            plugins: [ChartDataLabels]
        });

        function renderTable() {
            const tbody = document.getElementById("doanhThuTable");
            tbody.innerHTML = doanhThuData.map(d =>
                `<tr>
                            <td><strong>${d.Month}/${d.Year}</strong></td>
                            <td class="price-cell">${d.TongDoanhThu.toLocaleString('vi-VN')} ₫</td>
                        </tr>`
            ).join("");
        }

        function applyDarkMode() {
            myChart.data.datasets[0].backgroundColor = getGradient(ctx, isDarkMode());
            myChart.options.plugins.datalabels.color = isDarkMode() ? '#fff' : '#000';
            myChart.options.scales.y.ticks.color = isDarkMode() ? '#fff' : '#000';
            myChart.options.scales.x.ticks.color = isDarkMode() ? '#fff' : '#000';
            myChart.options.plugins.legend.labels.color = isDarkMode() ? '#fff' : '#000';
            myChart.update();
        }

        document.addEventListener("darkModeChanged", applyDarkMode);

        window.onload = function () {
            renderTable();
            applyDarkMode();
        };
    </script>

    <style>
        .hover-scale {
            transition: transform 0.2s ease-in-out;
        }

            .hover-scale:hover {
                transform: translateY(-4px) scale(1.02);
            }

        .stat-icon {
            width: 60px;
            height: 60px;
            font-size: 28px;
        }

        .table-card, .chart-card {
            background: var(--bs-body-bg);
        }
    </style>
}
